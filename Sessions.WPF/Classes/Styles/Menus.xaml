<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--<Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type Menu}">
                  <StackPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Left" Background="{DynamicResource BrushBackgroundColor}"></StackPanel>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>-->
  
        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="{DynamicResource BrushBackgroundColor}">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid SnapsToDevicePixels="true" Background="{DynamicResource BrushBackgroundColor}">
                            <DockPanel x:Name="contentBackground" Background="{DynamicResource BrushBackgroundColor}" Margin="0">
                                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                
  <!--<Path x:Name="GlyphPanel" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>-->
  
                                <ContentPresenter x:Name="content" ContentSource="Header" Margin="6" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                
  <!--<Path x:Name="GlyphPanel2" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>-->
  
                                <ContentPresenter x:Name="content2" ContentSource="Header" 
                                                  TextBlock.TextAlignment="Right" 
                                                  TextBlock.Foreground="Gray"
                                                  TextBlock.FontFamily="/Resources/Fonts/#Roboto Regular"
                                                  TextBlock.FontSize="10"
                                                  TextBlock.FontStyle="Italic"
                                Margin="6" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                
  <!--<TextBlock TextAlignment="Right" FontFamily="Roboto">Hello</TextBlock>-->
  
                            </DockPanel>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                                
  <!--<Border BorderThickness="2" BorderBrush="White" Background="{TemplateBinding Background}">-->
  
                                <Border BorderThickness="1" BorderBrush="{DynamicResource BrushHeaderBackgroundColor}" Background="{DynamicResource BrushBackgroundColor}">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="DockPanel.Background" Value="{DynamicResource BrushBackgroundColor}" TargetName="contentBackground"/>
                                <Setter Property="TextBlock.Foreground" Value="#CCCCCC" TargetName="content"/>
                                <Setter Property="TextBlock.FontFamily" Value="/Resources/Fonts/#Roboto" TargetName="content"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="DockPanel.Background" Value="{DynamicResource BrushMenuItemOverBackgroundColor}" TargetName="contentBackground"/>
                                <Setter Property="TextBlock.Foreground" Value="#FFFFFF" TargetName="content"/>
                                <Setter Property="TextBlock.FontFamily" Value="/Resources/Fonts/#Roboto" TargetName="content"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Rectangle Height="{TemplateBinding Height}"        
                           Fill="{StaticResource BrushHeaderBackgroundColor}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <StackPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Left" Background="{DynamicResource BrushBackgroundColor}"></StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
</ResourceDictionary>